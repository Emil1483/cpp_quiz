Id,Question,Option0,Option0Correct,Option1,Option1Correct,Option2,Option2Correct,Option3,Option3Correct
3,Se på koden under.{n}namespace foo {n}    int x;{n}    int bar() { return x; }{n}}{n}int f(int y) {n}    int z = 0;{n}    for (int i = 0; i < 10; i++) {n}        z += i * y;{n}    }{n}    return z;{n}}{n}Hvilke (en eller flere) av følgende utsagn er korrekte?,Navnerommet foo er i globalt skop.,true,Variablene x og y er i lokalt skop.,false,Variabelen z er skopet til for-løkka.,false,Funksjonen bar() kan ikke kalles fra f() fordi f() er deklarert utenfor navnerommet foo.,false
4,Se på klassedeklarasjonen under.{n}class A {n}    int *ptr;{n}    public:{n}    A(int val) {n}        ptr = new int(val);{n}    }{n}    void delete() {n}        delete ptr;{n}    }{n}};{n}Hvilke (en eller flere) av følgende utsagn er korrekte?,Klassen overholder RAII (Resource Acquisition Is Initialization).,false,Klassen har en implisitt standard (default) destruktør.,true,Hadde klassen hatt en kopikonstruktør, hadde klassen overholdt RAII (Resource Acquisition Is Initialization).,false,Når en instans av klassen A går ut av skop vil ressursene til klassen implisitt frigjøres.,false
5,Hvilke (en eller flere) av følgende utsagn er korrekte?,En destruktør frigjør ressursene til et klasseobjekt.,true,Enhver klasse har en destruktør.,true,Når en destruktør har blitt kalt, kan man ikke lenger initialisere objekter av klassen.,false,En destruktør må eksplisitt kalles.,false
6,Hvilke (en eller flere) av følgende utsagn er korrekte?,Man kan ta en kjørefil (executable) og kjøre den på et hvilket som helst operativsystem.,false,Når man kjører et kompilert program vil man ikke få kjøretidsfeil.,false,Man kan ta en kjørefil (executable) og kjøre den på hvilken som helst datamaskin.,false, Før man kan kjøre et C++ program må man kompilere kildekoden.,true
7,Hvilke (en eller flere) av følgende utsagn er korrekte?, Man kan alltid gjøre eksplisitt typekonvertering heller enn implisitt typekonvertering.,true,Man kan konvertere en float til en int uten tap av presisjon.,false,Man kan alltid konvertere en unsigned char til en char uten tap av presisjon.,false, Konvertering fra en int til en float kan gjøres implisitt.,true
8,Hvilke (en eller flere) av følgende utsagn er korrekte?, En klasse kan deklareres flere ganger.,true, En funksjon kan deklareres flere ganger.,true,En medlemsfunksjon kan defineres flere ganger.,false,En funksjon kan defineres flere ganger, men bare én gang i hver .cpp-fil.,false
9,Hvilke (en eller flere) av følgende utsagn er korrekte?,Man kan ikke definere en klasse i det globale skopet.,false,Man kan ikke definere en klasse i skopet til en funksjon.,false, Man kan deklarere nye medlemsfunksjoner til en klasse etter at klassen er deklarert.,true, Man kan definere en medlemsfunksjon både i og utenfor klassedefinisjonen.,true
10,Se på koden under.{n}int* foo (int a) {n}    int *ptr = new int(a);{n}    return ptr;{n}}{n}void bar(int b) {n}    int* ptr = foo(b);{n}    std::vector<int> vec;{n}    vec.push_back(b);{n}}{n}int main() {n}    bar(5);{n}    return 0;{n}}{n}Hvilke (en eller flere) av følgende utsagn er korrekte?, Koden inneholder en minnelekkasje.,true,På linje 14 vil minnet som ptr peker til være frigjort.,false, På linje 14 vil ressursene allokert til vec være frigjort.,true,Det allokeres ingen ressurser til vec som må frigjøres.,false
11,Hvilke (en eller flere) av disse kan være medlemmer i en klasse?, Variabler,true, Variabler merket som constexpr,true, Statiske funksjoner,true,Funksjoner,true
12,Hvilken funksjon (en eller flere) har en rent virtuell (pure virtual) destruktør?, Tvinge arvende klasser til å implementere egne destruktører.,true,Forsikre at destruktøren ikke kalles for å bedre ytelsen.,false,Sikre at man ikke kan initialisere et objekt av baseklassen.,false,Sikre at en klasse ikke kan arves fra.,false
13,Hvilke (en eller flere) av følgende utsagn er korrekte?,Alle ressurser blir automatisk frigjort når et unntak kastes.,false, C++ splitter unntak i detektering, via en try-blokk, og håndtering, via catch-blokker.,true,Hvis du bruker at()-funksjonen for å indeksere en std::vector, men indeksen er utenfor rekkevidde, kan du fange dette med en std::runtime_error.,false, Unntakshåndtering er et eksempel på flytkontroll.,true
14,Hvilke (en eller flere) av følgende utsagn er korrekte?,Hvis man vil finne minneadressen til en verdi kan man bruke *-operatoren.,false,Hvis man vil lese verdien som en peker peker til kan man bruke &-operatoren.,false, Hvis man vil endre verdien som en peker peker til kan man bruke *-operatoren.,true, Hvis man vil endre verdien som en peker peker til kan man bruke []-operatoren.,true
15,Se på koden under.{n}double* p1 = new double{3.14};{n}double* p2 = p1;{n}*p1 = 9.86;{n}*p2 = 1.77;{n}Hvilke (en eller flere) av følgende utsagn er korrekte?,Koden er et eksempel på dyp kopiering (deep copy).,false, Koden er et eksempel på grunn kopiering (shallow copy).,true, Etter linje 4 peker p1 og p2 på samme verdier.,true,Etter linje 4 peker p1 og p2 på ulike objekt.,false
16,Hvilke (en eller flere) av følgende utsagn er korrekte?, En funksjon merket som friend har tilgang til klassemedlemmer med tilgangsnivåene public, protected og private.,true,En funksjon merket som friend i en baseklasse må overlastes i avledende klasser.,false,En funksjon merket som friend kan ikke være medlem av noen klasse.,false,friend-nøkkelordet kan bare brukes på operatorer som er overlastet.,false
17,Hvilke (en eller flere) av følgende utsagn er korrekte?,Elementene i et std::set er uordnet.,false,Det er ikke mulig å hente ut verdier av et std::set. Medlemsfunksjonen contains() kan brukes i stedet.,false, Man kan ikke bruke std::push back() for å legge til et element i et std::set.,true,Et std::unordered set har ikke duplikate verdier.,false
18,Hvilke (en eller flere) av følgende utsagn er korrekte?,Templates stiller aldri krav til hvilke typer de aksepterer som argument.,false,Templates burde defineres i .cpp-filer for å unngå feil under linking.,false, Kompilatoren kan i noen tilfeller løse template-parametre uten at typen til parametrene er oppgitt.,true,Klassetemplates kan ikke ha standard (default) template-parametre.,false
19,Hvilke (en eller flere) av følgende utsagn er korrekte?, Operativsystemet vil opprette en fil man prøver å skrive til hvis den ikke eksisterer.,true, En fil er en sekvens med bytes.,true,Operativsystemet vil opprette en fil man prøver å lese fra hvis den ikke eksisterer.,false,Det er ikke mulig å skrive private klassemedlemmer til fil.,false
20,Hvilke (en eller flere) av følgende utsagn er korrekte?,Minne som har blitt allokert med new-operatoren i funksjonen blir automatisk frigjort når et unntak blir kastet.,false, Flere catch-blokker kan behandle samme type unntak.,true,Dersom det ikke finnes en catch-blokk for et utløst unntak, vil unntaket ignoreres og programmet fortsette normal kjøring fra punktet der unntaket ble utløst.,false, Programmet avslutter dersom et unntak ikke blir håndtert.,true
21,Hva må minimum presiseres ved variabeldeklarasjon?, Datatype,true, Navn,true,Verdi,false,Navnerom (namespace),false
22,Hvilke (en eller flere) av følgende utsagn er korrekt?, Funksjonen incrementValue() har ingen bivirkninger (side effects).,true,Kallet til incrementValue() i linje 7 vil evalueres ved kompileringstid.,false, Kallet til incrementValue() i linje 8 vil evalueres ved kompileringstid.,true,Variabelen v4 vil evalueres ved kjøretid.,false
23,Hvilke (en eller flere) av følgende utsagn er korrekt?, En enum,true, En struct,true, En enum-klasse,true, En abstrakt klasse,true
24,Hvilke (en eller flere) alternativ er en egendefinert type?, En enum,true, En struct,true, En enum-klasse,true, En abstrakt klasse,true
25,Hvilke (en eller flere) av sammenligningene i koden under vil **ikke** gi feil?+ 
26,Hvilke (en eller flere) av følgende utsagn er korrekte?, Templates muliggjør generisk programmering i C++.,true,Templates blir instansiert ved kjøretid.,false,Polymorfisme er ikke et konsept i objektorientert programmering.,false, Templates blir instansiert ved kompileringstid.,true
27,Hvilke (en eller flere) funksjonsdeklarasjoner er ekvivalente til `void f(int* a);`?, void f(int a[]);,true, void f(int a[2048]);,true,void f(std::array<int, 2048> a);,false,void f(int** a);,false
28,Hvilke (en eller flere) av følgende parameteroverføringer krever returverdi for å se endring utenfor funksjonsskop?, pass-by-value,true,pass-by-reference,false, pass-by-const-reference,true,pass-by-pointer,false
29,Hvilke (en eller flere) av følgende utsagn er korrekt?,En konstant (const) variabel kan endres.,false, En konstant (const) referansevariabel kun kan leses.,true,Man kan endre hva en referansevariabel refererer til så mange ganger man ønsker.,false, Funksjonsparametere som er konstante referansevariabler signaliserer at funksjonen ikke kommer til å endre parameterverdiene.,true
30,Velg rett scope for hver variabel i ShoppingCart-koden. `prices` er i … / `sum` er i …, prices er i klassens scope,true,prices er i globalt scope,false,prices er i lokalt scope,false,prices er i scopeet til for-løkka,false
31,Velg rett scope for hver variabel i ShoppingCart-koden. `prices` er i … / `sum` er i …, sum er i klassens scope,false,sum er i globalt scope,false,sum er i lokalt scope,true,sum er i scopeet til for-løkka,false
32,Hvilke (en eller flere) av følgende utsagn er korrekte? (float→int konvertering),Konverteringen er eksplisitt.,false, Konverteringen medfører tap av presisjon.,true,Man kan bruke static_cast<int>(floatValue) eller int(floatValue) for å unngå tap av presisjon.,false, Man vil tape presisjon selv om man bruker static_cast<int>(floatValue) eller int(floatValue), men man burde likevel bruke dem.,true
33,Hvilke (en eller flere) av følgende utsagn er korrekte om templates?, Templates muliggjør generisk programmering i C++.,true,Templates blir instansiert ved kjøretid.,false,Polymorfisme er ikke et konsept i objektorientert programmering.,false, Templates blir instansiert ved kompileringstid.,true
34,Hvilke (en eller flere) av følgende utsagn er korrekte om overlasting?, Konstruktører kan overlastes.,true, Overlastning kan være et alternativ til å bruke standard (default) argument.,true,En medlemsfunksjon som er definert med virtual kan ikke overlastes.,false,Det er valgfritt å overlaste en medlemsfunksjon som er definert med override.,false
35,Hva må minimum presiseres ved funksjonsdeklarasjon?, Funksjonsnavn,true,Verdi,false, Returtype,true, Parameterliste,true
36,Hvilke (en eller flere) av følgende utsagn er korrekt? (std::list rend/end/rbegin), Medlemsfunksjonen rend() til std::list returnerer en iterator.,true,Medlemsfunksjonene begin() og rend() til std::list returnerer samme element.,false, Medlemsfunksjonene rbegin() og end() til std::list returnerer ikke samme element.,true,Medlemsfunksjonen rbegin() til en STL-beholder peker til det første elementet i beholderen.,false
37,Hvilke (en eller flere) av følgende utsagn er korrekt? (reversesv versjon), Medlemsfunksjonen rend() til std::list returnerer en iterator.,true,Medlemsfunksjonene rbegin() og end() til std::list returnerer samme element.,false,Medlemsfunksjonene begin() og rend() til std::list returnerer samme element.,false, Medlemsfunksjonen rbegin() til en STL-beholder peker til det siste elementet i beholderen.,true
38,Hvilke (en eller flere) av følgende utsagn er korrekte? (identisk med Spm 2), Medlemsfunksjonen rend() til std::list returnerer en iterator.,true,Medlemsfunksjonene rbegin() og end() til std::list returnerer samme element.,false, Medlemsfunksjonene begin() og rend() til std::list returnerer ikke samme element.,true,Medlemsfunksjonen rbegin() til en STL-beholder peker til det første elementet i beholderen.,false
39,Se på koden under.{n}int* foo(int a) {int* ptr=new int(a);return ptr;} void bar(int b) {int* ptr=foo(b);std::vector<int> vec;vec.push_back(b);} int main() { bar(5); return 0; } Hvilke (en eller flere) av følgende utsagn er korrekte?, Koden inneholder en minnelekkasje.,true,På linje 14 vil minnet som ptr peker til være frigjort.,false, På linje 14 vil ressursene allokert til vec være frigjort.,true,Det allokeres ingen ressurser til vec som må frigjøres.,false
40,Hvilke (en eller flere) av disse kan være medlemmer i en klasse?, Variabler,true, Variabler merket som constexpr,true, Statiske funksjoner,true, Funksjoner,true
41,Hvilken funksjon (en eller flere) har en rent virtuell (pure virtual) destruktør?, Tvinge arvende klasser til å implementere egne destruktører.,true,Forsikre at destruktøren ikke kalles for å bedre ytelsen.,false,Sikre at man ikke kan initialisere et objekt av baseklassen.,false,Sikre at en klasse ikke kan arves fra.,false
42,Hvilke (en eller flere) av følgende utsagn er korrekte? (unntakshåndtering),Alle ressurser blir automatisk frigjort når et unntak kastes.,false, C++ splitter unntak i detektering, via en try-blokk, og håndtering, via catch-blokker.,true,Hvis du bruker at()-funksjonen for å indeksere en std::vector, men indeksen er utenfor rekkevidde, kan du fange dette med en std::runtime error.,false, Unntakshåndtering er et eksempel på flytkontroll.,true
43,Hvilke (en eller flere) av følgende utsagn er korrekte? (pekere),Hvis man vil finne minneadressen til en verdi kan man bruke *-operatoren.,false,Hvis man vil lese verdien som en peker peker til kan man bruke &-operatoren.,false, Hvis man vil endre verdien som en peker peker til kan man bruke *-operatoren.,true, Hvis man vil endre verdien som en peker peker til kan man bruke []-operatoren.,true
44,Se på koden under.{n}double* euler1=new double{0.577}; double* euler2=new double{*euler1}; *euler1=2.718; *euler2=0.596; Hvilke (en eller flere) av følgende utsagn er korrekte?, Koden er et eksempel på dyp kopiering (deep copy).,true,Koden er et eksempel på grunn kopiering (shallow copy).,false,Etter linje 4 peker euler1 og euler2 på samme verdier.,false,Etter linje 4 vil euler2 være en peker til en peker.,false
45,Hvilke (en eller flere) av følgende utsagn er korrekte?, Abstrakte klasser kan ha medlemmer som er protected.,true,Et klassemedlem med tilgangsnivået protected kan bare aksesseres i filen den er deklarert.,false, friend-deklarasjoner gir tilgang til private klassemedlemmer.,true, friend-deklarasjoner kan brukes til å overbelaste output-operatoren.,true
46,Se på deklarasjonene til klassene Parent og Child under. Hva er tilgangsnivået til `surname` i `Child`?, Protected,true,Private,false,Public,false,Friend,false
47,Hvilke (en eller flere) av parameteroverføringene krever returverdi for å se endring utenfor funksjonsskop?, pass-by-value,true,pass-by-reference,false, pass-by-const-reference,true,pass-by-pointer,false
48,Hvilke (en eller flere) av følgende utsagn er korrekte? (const/ref),En konstant (const) variabel kan endres.,false, En konstant (const) referansevariabel kun kan leses.,true,Man kan endre hva en referansevariabel refererer til så mange ganger man ønsker.,false, Funksjonsparametere som er konstante referansevariabler signaliserer at funksjonen ikke kommer til å endre parameterverdiene.,true
49,Spørsmål: `cout << country_capital[\Iceland\] << endl;` Denne kodelinjen vil…,Kjøre uten feil,true,Kaste et unntak,false,Legge til et nytt element i tabellen,true,Skrive Reykjavik til terminalen,false
50,Spørsmål: `country_capital.at(\Finland\) = \Helsinki\;` Denne kodelinjen vil…,Kjøre uten feil,false,Kaste et unntak,true,Oppdatere en eksisterende mapping,false,Sette inn en mapping fra Finland til Helsinki,false
51,Spørsmål: `country_capital[\Finland\] = \Helsinki\;` Denne kodelinjen vil…,Kjøre uten feil,true,Kaste et unntak,false,Oppdatere en eksisterende mapping,false,Sette inn en mapping fra Finland til Helsinki,true
52,Hvilke (en eller flere) av følgende utsagn om array vs vector er sanne?, A vector keeps track of size while an array does not.,true,Arrays cannot be declared dynamically while vectors can be.,false, Arrays never use more memory than identical vectors.,true,Accessing the elements in arrays always takes less time than accessing the elements in vectors.,false
53,Hvilke (en eller flere) av følgende utsagn om array vs vector er sanne?,Both arrays and vectors can be accessed through iterators.,false,(ingen merket),,,(korte avkryssinger),,,(matrise oppgave fund),,
54,Hva vil koden i segment (a) skrive ut for `f(3,3)`?,20,true,60,false,25,false,compiler error,false
55,Hva vil koden i segment (b) skrive ut for `f(3,3)`?,20,false,60,false,25,true,compiler error,false
56,Kodesnutt for å kvadrere matrix: Hvilke linjer inneholder feil?,Linje 14,true,Linje 15,true,Linje 17,true,Linje 18,true
57,Hvorfor bruke unique_ptr i C++?,Det sørger for at alle elementene i en container er unike,false, Det gjør det mulig å dele på et objekt uten å bry seg om minnehåndteringen.,true, Det forenkler minnehåndteringen ved å sikre at det bare finnes en enkelt referanse til objektet,true,Programmer kjører raskere med unique_ptr,false
58,Select all properties of virtual functions:, Virtual function need not be defined in derived class.,true, Compiler determines which virtual function to invoke based on the object pointed to by the base class pointer.,true, Virtual functions must exist in some class.,true, Virtual function must have 'virtual' keyword before declaration.,true
59,Select all properties of virtual functions (forts.), Virtual function can be a friend function of another class.,true,Friend function and virtual functions have the same functionality.,false,(ingen synlige flere),,
60,Hvilke (en eller flere) av parameteroverføringene krever returverdi for å se endring utenfor funksjonsskop for 9dde6af6?,  pass-by-value,true,pass-by-reference,false, pass-by-const-reference,true,pass-by-pointer,false
61,Hvilke (en eller flere) av følgende utsagn er korrekte? (9dde6af6), ⃝ C++ støtter ikke objektorientert programmering,false, En konstant (const) referansevariabel kun kan leses.,true,Man kan endre hva en referansevariabel refererer til så mange ganger man ønsker.,false, Funksjonsparametere som er konstante referansevariabler signaliserer at funksjonen ikke kommer til å endre parameterverdiene.,true
62,Hvilke (en eller flere) av følgende utsagn er korrekte? (ShoppingCart scope), prices er i klassens skop,true,prices er i globalt skop,false,prices er i lokalt skop,false,prices er i skopet til for-løkka,false
63,Hvilke (en eller flere) av følgende utsagn er korrekte? (ShoppingCart scope), sum er i klassens skop,false,sum er i globalt skop,false,sum er i lokalt skop,true,sum er i skopet til for-løkka,false
64,Hvilke (en eller flere) av følgende utsagn er korrekte? (Konvertering float→int), ⃝ Konverteringen er eksplisitt.,false, Konverteringen medfører tap av presisjon.,true,Man kan bruke static_cast<int>(floatValue) eller int(floatValue) for å unngå tap av presisjon i konverteringen.,false, Man vil tape presisjon selv om man bruker static_cast<int>(floatValue) eller int(floatValue), men man burde likevel bruke dem.,true
65,Hvilke (en eller flere) av følgende utsagn er korrekte? (Templates C++), Templates muliggjør generisk programmering i C++.,true,Templates blir instansiert ved kjøretid.,false,Polymorfisme er ikke et konsept i OOCP.,false, Templates blir instansiert ved kompileringstid.,true
66,Hvilke (en eller flere) av følgende utsagn er korrekte? (Overlasting),  Konstruktører kan overlastes.,true, Overlastning kan være et alternativ til å bruke standard (default) argument.,true,En medlemsfunksjon som er definert med virtual kan ikke overlastes.,false,Det er valgfritt å overlaste en medlemsfunksjon som er definert med override.,false
67,Which statements about arrays and vectors are true? (jf. f59e9239),  A vector keeps track of size while an array does not.,true,Arrays cannot be declared dynamically while vectors can be.,false, Arrays never use more memory than identical vectors.,true,Accessing elements in arrays always takes less time than accessing elements in vectors.,false
